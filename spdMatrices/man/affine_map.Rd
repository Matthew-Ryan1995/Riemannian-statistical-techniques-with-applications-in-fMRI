% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/affine_functions.R
\name{affine_map}
\alias{affine_map}
\title{affine_map}
\usage{
affine_map(P, W, chol = FALSE, FUN = "exp", P.sq = NULL, ...)
}
\arguments{
\item{P}{Matrix: The base point on the manifold}

\item{W}{Matrix: If applying the Exp map, W is a tangent vector at P.  If applying the Log map, W is another point on the manifold.}

\item{chol}{Logical: Should Cholesky square root be used?}

\item{FUN}{Character: Either exp or log, defining which map to apply.}

\item{P.sq}{Matrix: Optional. The square root of P, to help speed calculation.}

\item{...}{Optional list:
\itemize{
\item method : The method to pass to expm or logm.  Only accepts Eigen or Higham08
}}
}
\value{
A symmetric or positive definite symmetric matrix.
}
\description{
This will apply either the Riemannian Log or Exp maps in the affine invariant geometry.
}
\details{
When applying Log, you get that

\if{html}{\out{<div class="sourceCode">}}\preformatted{ Log_P(W) = P^\{1/2\} Log(P^\{-1/2\} W P^\{-1/2\}) P^\{1/2\}
}\if{html}{\out{</div>}}

Where Log is the matrix logarithm.  This will take a point on the manifold W and return a
tangent vector in TpM.

When applying Exp, you get

\if{html}{\out{<div class="sourceCode">}}\preformatted{ Exp_P(W) = P^\{1/2\} Exp(P^\{-1/2\} W P^\{-1/2\}) P^\{1/2\}
}\if{html}{\out{</div>}}

Where Exp is the matrix logarithm.  This will take tangent vector W in TpM, and return a point in
the manifold.

Both of these maps have the affect for translating to the identity, applying the matrix map, and
translating pack to the tangent space at P
}
\examples{
## Get some matrices
## We will look at the first two subjects in the COBRE dataset
P <- cobre$cors[[1]]
W <- cobre$cors[[2]]

## Push W to a tangent vector using the Logarithm

W_vector <- affine_map(P, W, method = "log")

## Push W back down to the manifold using the exponential.

W_back <- affine_map(P, W_vector, method = "exp")

## Check it is the reverse (up to numerical error)
identical(zapsmall(W_back), zapsmall(W))

}
