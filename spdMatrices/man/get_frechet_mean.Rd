% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/affine_functions.R
\name{get_frechet_mean}
\alias{get_frechet_mean}
\title{get_frechet_mean}
\usage{
get_frechet_mean(
  data,
  var.name = NULL,
  tol = 1e-08,
  nrep = 1000,
  cores = 1,
  symmetric = TRUE,
  ...
)
}
\arguments{
\item{data}{List, array, or dataframe: The data you want to find the mean of.}

\item{var.name}{Character: The name of the variable containing the correlation matrices. Defaults to NULL.}

\item{tol}{Numeric: The tolerance you want to work at for the mean calculation. Defaults to 1e-8.}

\item{nrep}{Integer: The total number of iterations before you stop searching for the mean. Defaults to 1000.}

\item{cores}{Integer > 0: This is set up for parallelisation on Mac through mclapply.
This will determine the number of cores to use. Defaults to 1.}

\item{symmetric}{Logical: Should the symmetric square root be used, or the Cholesky.}

\item{...}{Optional arguments to be passed onto affine_map
- convergence_properties : return convergence properties for algorithm}
}
\value{
\itemize{
\item Fmean: A matrix that is an estimation of the Frechet mean of the PSD matrices.
\item error: The error achieved in the algorithm
\item num_iter: The numer of iterations to convergence
}
}
\description{
This will apply a Gauss-Newton gradient decent method to calculate the Frechet mean
on the cone of positive definite matrices with the affine-invariant metric for a given set
of data.
}
\details{
This function implements the gradient decent method on page 97 of
"Riemannian Geometric Statistics in Medical Image Analysis."  It aims to find

\if{html}{\out{<div class="sourceCode">}}\preformatted{F = arg min_\{F\} \\sum d(F, P_i).
}\if{html}{\out{</div>}}
}
\examples{

## Calculate the Frechet mean of the COBRE data.  This will be slow (take about 2 - 3 minutes)

F <- get_frechet_mean(cobre, "cors")

corrplot::corrplot(F, is.corr = FALSE)

}
