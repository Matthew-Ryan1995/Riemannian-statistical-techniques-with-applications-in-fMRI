% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/affine_functions.R
\name{get_affine_m1}
\alias{get_affine_m1}
\title{get_affine_m1}
\usage{
get_affine_m1(P, data, var.name = NULL, P.sq = NULL, cores = 1, ...)
}
\arguments{
\item{P}{Matrix: The point to find the moment around.}

\item{data}{list, array or data frame: The sample data}

\item{var.name}{Character: If you are using a dataframe, then the name of the variable in the
data frame.}

\item{P.sq}{Matrix: The square root of P, to speed up calculations. Optional}

\item{cores}{Integer > 0: This is set up for parallelisation on Mac through mclapply.
This will determine the number of cores to use. Defaults to 1.}

\item{...}{Optional arguments to be passed on to affine_map}
}
\value{
A matrix of the same dimension as P that is the M1 approximation at P.
}
\description{
This will calculate the Riemannian approximation of the first-order moment of the sample
distribution at P.  This function is used directly to calculate the Frechet mean.
}
\details{
Performs the calculation of

\if{html}{\out{<div class="sourceCode">}}\preformatted{M1(P) = \\frac\{1\}\{m\} \\sum P^\{1/2\} Log(P^\{-1/2\} P_i P^\{-1/2\}) P^\{1/2\}
}\if{html}{\out{</div>}}

where P_i is each observed point in data, and m is the number of observations in data.
}
\examples{

# We will perform the first step in calculating the Frechet mean for the Cobre data:

P <- cobre$cors[[1]]
M1 <- get_affine_m1(P, data = cobre, var.name = "cors")


}
