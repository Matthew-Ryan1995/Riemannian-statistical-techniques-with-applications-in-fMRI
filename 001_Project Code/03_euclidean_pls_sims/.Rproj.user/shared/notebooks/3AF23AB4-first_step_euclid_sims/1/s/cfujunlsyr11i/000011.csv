"0","gen_data <- function(sims = 1, n, p, q, sig, L = 5, seed = 1234){"
"0","  "
"0","  sig <- sort(sig)"
"0","  "
"0","  if(!is.null(seed)){"
"0","    set.seed(seed)"
"0","  }"
"0","  "
"0","  # Fixed P and Q across simulation parameters p, q and L"
"0","  P <- matrix(rnorm(L*p), nrow = p, ncol = L)"
"0","  Q <- matrix(rnorm(L*q), nrow = q, ncol = L)"
"0","  "
"0","  "
"0","  # Make P and Q orthogonal"
"0","  if(p < L){"
"0","    P <- t(svd(P)$v)"
"0","  }else{"
"0","    P <- svd(P)$u"
"0","  }"
"0","  if(q < L){"
"0","    Q <- t(svd(Q)$v)"
"0","  }else{"
"0","    Q <- svd(Q)$u"
"0","  }"
"0","  "
"0","  # Set up simulation parameters, this repeats the parameters for each simulation per sample size"
"0","  params <- map_dfr(n,"
"0","                    function(n){"
"0","                      expand_grid(sig = sig, n = n, sim = rep(1:sims, n), K = 1:(2*L))"
"0","                    }) %>% "
"0","    arrange(sig)"
"0","  "
"0","  N <- sum(sims*n*(2*L)*(length(sig))) # Total number of obs to construct"
"0","  "
"0","  ## Create the scores"
"0","  Tmat <- matrix(rnorm(N * L), nrow = N)"
"0","  ## Taking B = I so T = U"
"0","  "
"0","  ## Create error matrices"
"0","  E <-  do.call(rbind, map(sig, "
"0","                           ~matrix(rnorm(N * p/(length(sig)), sd = .x), "
"0","                                   nrow = N/(length(sig)))))"
"0","  Fmat <-  do.call(rbind, map(sig, "
"0","                              ~matrix(rnorm(N * q/(length(sig)), sd = .x), "
"0","                                      nrow = N/(length(sig)))))"
"0","  "
"0","  X <- tcrossprod(Tmat, P) + E"
"0","  Y <- tcrossprod(Tmat, Q) + Fmat"
"0","  "
"0","  colnames(X) <- str_c(""X"", 1:ncol(X))"
"0","  colnames(Y) <- str_c(""Y"", 1:ncol(Y))"
"0","  "
"0","  dat <- cbind(X, Y) %>% "
"0","    as_tibble() %>% "
"0","    bind_cols(params) %>% # Join on sim params"
"0","    group_by(sig, sim, n, K) %>%"
"0","    nest(X = starts_with(""X""), Y = starts_with(""Y"")) %>% # nest my data"
"0","    mutate(X = map(X, as.matrix), # Convert to matrices"
"0","           X = map(X, ~apply(.x, 2, scale, scale = FALSE)), # I am applying centering here, this may be an issue."
"0","           Y = map(Y, as.matrix),"
"0","           Y = map(Y, ~apply(.x, 2, scale, scale = FALSE)),) %>% "
"0","    ungroup() %>% "
"0","    mutate(p = p, q = q, L = L, P = list(P), Q = list(Q)) # add extra params, plus P and Q"
"0","  "
"0","  return(dat)"
"0","}"
