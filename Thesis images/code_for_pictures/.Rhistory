source("~/Desktop/PhD/PhD/002_Thesis/01_initial_draft/img/code_for_pictures/create_network_graph.R", echo=TRUE)
p
source("~/Desktop/PhD/PhD/002_Thesis/01_initial_draft/img/code_for_pictures/create_network_graph.R", echo=TRUE)
p
source("~/Desktop/PhD/PhD/002_Thesis/01_initial_draft/img/code_for_pictures/create_network_graph.R", echo=TRUE)
p
source("~/Desktop/PhD/PhD/002_Thesis/01_initial_draft/img/code_for_pictures/create_network_graph.R", echo=TRUE)
3
p
source("~/Desktop/PhD/PhD/002_Thesis/01_initial_draft/img/code_for_pictures/create_network_graph.R", echo=TRUE)
p
knitr::opts_chunk$set(echo = TRUE)
phdWork::cobre
pacman::p_load(tidyverse, phdWork, igraph, ggraph)
set.seed(12345)
# Create adjacency matrix
adj <- cobre %>%
filter(id == "40012") %>%
pull(cors) %>%
.[[1]]
diag(adj) <- 0
# adj[abs(adj) < 0.28] <- 0 # Threshold so full connected
# Create graph, add network to attributes
g <- graph_from_adjacency_matrix(adjmatrix = adj,
mode = "undirected",
weighted = TRUE,
diag = FALSE)
labels <- read_csv(
"~/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois_labels.csv", col_types = cols()
) %>%
pull(`net name`)
g <- g %>%
set_vertex_attr("network", value = labels)
min_g <- mst(g)
## make plot
min_g
min_g %>%
vertex.attributes()
min_g %>%
edge.attributes()
min_g %>%
edge.attributes() %>%
.$weight
min_g %>%
edge.attributes() %>%
.$weight %>%
max(abs(.))
pacman::p_load(tidyverse, phdWork, igraph, ggraph)
set.seed(12345)
# Create adjacency matrix
adj <- cobre %>%
filter(id == "40012") %>%
pull(cors) %>%
.[[1]]
diag(adj) <- 0
adj[abs(adj) < 0.570162] <- 0 # Threshold so full connected
# Create graph, add network to attributes
g <- graph_from_adjacency_matrix(adjmatrix = adj,
mode = "undirected",
weighted = TRUE,
diag = FALSE)
labels <- read_csv(
"~/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois_labels.csv", col_types = cols()
) %>%
pull(`net name`)
g <- g %>%
set_vertex_attr("network", value = labels)
min_g <- mst(g)
## make plot
ggraph((g), layout = "dh") +
geom_edge_link(alpha = 0.5) +
geom_node_label(aes(fill = network, label = name), size = 4) +
theme_void() +
labs(fill = "Network") +
harrypotter::scale_fill_hp_d("ravenclaw") +
theme(legend.position = "bottom")
pacman::p_load(tidyverse, phdWork, igraph, ggraph)
set.seed(12345)
# Create adjacency matrix
adj <- cobre %>%
filter(id == "40012") %>%
pull(cors) %>%
.[[1]]
diag(adj) <- 0
adj[abs(adj) > 0.570162] <- 0 # Threshold so full connected
# Create graph, add network to attributes
g <- graph_from_adjacency_matrix(adjmatrix = adj,
mode = "undirected",
weighted = TRUE,
diag = FALSE)
labels <- read_csv(
"~/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois_labels.csv", col_types = cols()
) %>%
pull(`net name`)
g <- g %>%
set_vertex_attr("network", value = labels)
min_g <- mst(g)
## make plot
ggraph((g), layout = "dh") +
geom_edge_link(alpha = 0.5) +
geom_node_label(aes(fill = network, label = name), size = 4) +
theme_void() +
labs(fill = "Network") +
harrypotter::scale_fill_hp_d("ravenclaw") +
theme(legend.position = "bottom")
ggraph((g), layout = "dh", circular = T) +
geom_edge_link(alpha = 0.5) +
geom_node_label(aes(fill = network, label = name), size = 4) +
theme_void() +
labs(fill = "Network") +
harrypotter::scale_fill_hp_d("ravenclaw") +
theme(legend.position = "bottom")
min_g %>%
edge.attributes() %>%
.$weight %>%
min(abs(.))
pacman::p_load(tidyverse, phdWork, igraph, ggraph)
set.seed(12345)
# Create adjacency matrix
adj <- cobre %>%
filter(id == "40012") %>%
pull(cors) %>%
.[[1]]
diag(adj) <- 0
# adj[abs(adj) > 0.570162] <- 0 # Threshold so full connected
# Create graph, add network to attributes
g <- graph_from_adjacency_matrix(adjmatrix = adj,
mode = "undirected",
weighted = TRUE,
diag = FALSE)
labels <- read_csv(
"~/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois_labels.csv", col_types = cols()
) %>%
pull(`net name`)
g <- g %>%
set_vertex_attr("network", value = labels)
min_g <- mst(g)
## make plot
min_g %>%
edge.attributes() %>%
.$weight %>%
min(abs(.))
pacman::p_load(tidyverse, phdWork, igraph, ggraph)
set.seed(12345)
# Create adjacency matrix
adj <- cobre %>%
filter(id == "40012") %>%
pull(cors) %>%
.[[1]]
diag(adj) <- 0
# adj[abs(adj) > 0.570162] <- 0 # Threshold so full connected
# Create graph, add network to attributes
g <- graph_from_adjacency_matrix(adjmatrix = adj,
mode = "undirected",
weighted = TRUE,
diag = FALSE)
labels <- read_csv(
"~/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois_labels.csv", col_types = cols()
) %>%
pull(`net name`)
g <- g %>%
set_vertex_attr("network", value = labels)
min_g <- mst(g)
## make plot
min_g %>%
edge.attributes() %>%
.$weight %>%
min(abs(.))
min_g %>%
edge.attributes() %>%
.$weight
min_g %>%
edge.attributes() %>%
.$weight %>%
min((.))
min_g %>%
edge.attributes() %>%
.$weight %>%
max((.))
pacman::p_load(tidyverse, phdWork, igraph, ggraph)
set.seed(12345)
# Create adjacency matrix
adj <- cobre %>%
filter(id == "40012") %>%
pull(cors) %>%
.[[1]]
diag(adj) <- 0
adj[abs(adj) > 0.2375139] <- 0 # Threshold so full connected
# Create graph, add network to attributes
g <- graph_from_adjacency_matrix(adjmatrix = adj,
mode = "undirected",
weighted = TRUE,
diag = FALSE)
labels <- read_csv(
"~/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois_labels.csv", col_types = cols()
) %>%
pull(`net name`)
g <- g %>%
set_vertex_attr("network", value = labels)
min_g <- mst(g)
## make plot
ggraph((g), layout = "dh", circular = T) +
geom_edge_link(alpha = 0.5) +
geom_node_label(aes(fill = network, label = name), size = 4) +
theme_void() +
labs(fill = "Network") +
harrypotter::scale_fill_hp_d("ravenclaw") +
theme(legend.position = "bottom")
pacman::p_load(tidyverse, phdWork, igraph, ggraph)
set.seed(12345)
# Create adjacency matrix
adj <- cobre %>%
filter(id == "40012") %>%
pull(cors) %>%
.[[1]]
diag(adj) <- 0
adj[abs(adj) < 0.2375139] <- 0 # Threshold so full connected
# Create graph, add network to attributes
g <- graph_from_adjacency_matrix(adjmatrix = adj,
mode = "undirected",
weighted = TRUE,
diag = FALSE)
labels <- read_csv(
"~/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois_labels.csv", col_types = cols()
) %>%
pull(`net name`)
g <- g %>%
set_vertex_attr("network", value = labels)
min_g <- mst(g)
## make plot
ggraph((g), layout = "dh") +
geom_edge_link(alpha = 0.5) +
geom_node_label(aes(fill = network, label = name), size = 4) +
theme_void() +
labs(fill = "Network") +
harrypotter::scale_fill_hp_d("ravenclaw") +
theme(legend.position = "bottom")
pacman::p_load(tidyverse, phdWork, igraph, ggraph)
set.seed(12345)
# Create adjacency matrix
adj <- cobre %>%
filter(id == "40012") %>%
pull(cors) %>%
.[[1]]
diag(adj) <- 0
adj[abs(adj) < 0.237514] <- 0 # Threshold so full connected
# Create graph, add network to attributes
g <- graph_from_adjacency_matrix(adjmatrix = adj,
mode = "undirected",
weighted = TRUE,
diag = FALSE)
labels <- read_csv(
"~/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois_labels.csv", col_types = cols()
) %>%
pull(`net name`)
g <- g %>%
set_vertex_attr("network", value = labels)
min_g <- mst(g)
## make plot
ggraph((g), layout = "dh") +
geom_edge_link(alpha = 0.5) +
geom_node_label(aes(fill = network, label = name), size = 4) +
theme_void() +
labs(fill = "Network") +
harrypotter::scale_fill_hp_d("ravenclaw") +
theme(legend.position = "bottom")
pacman::p_load(tidyverse, phdWork, igraph, ggraph)
set.seed(12345)
# Create adjacency matrix
adj <- cobre %>%
filter(id == "40012") %>%
pull(cors) %>%
.[[1]]
diag(adj) <- 0
adj[abs(adj) < 0.24] <- 0 # Threshold so full connected
# Create graph, add network to attributes
g <- graph_from_adjacency_matrix(adjmatrix = adj,
mode = "undirected",
weighted = TRUE,
diag = FALSE)
labels <- read_csv(
"~/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois_labels.csv", col_types = cols()
) %>%
pull(`net name`)
g <- g %>%
set_vertex_attr("network", value = labels)
min_g <- mst(g)
## make plot
ggraph((g), layout = "dh") +
geom_edge_link(alpha = 0.5) +
geom_node_label(aes(fill = network, label = name), size = 4) +
theme_void() +
labs(fill = "Network") +
harrypotter::scale_fill_hp_d("ravenclaw") +
theme(legend.position = "bottom")
